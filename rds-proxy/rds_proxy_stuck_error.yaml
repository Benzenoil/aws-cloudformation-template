AWSTemplateFormatVersion: '2010-09-09'
Description: CloudFormation template to create an RDS Proxy with optional read endpoint

Parameters:
  DBProxyName:
    Type: String
    Description: Name of the RDS Proxy

  AuthSecretArn:
    Type: String
    Description: The ARN of the AWS Secrets Manager secret

  VpcSubnetIds:
    Type: List<AWS::EC2::Subnet::Id>
    Description: List of VPC Subnet IDs

  VpcId:
    Type: AWS::EC2::VPC::Id
    Description: VPC ID

  DBClusterIdentifier:
    Type: String
    Description: The identifier of the RDS cluster

Resources:
  SecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Security group for the RDS Proxy
      VpcId: !Ref VpcId
      SecurityGroupIngress:
        - CidrIp: 127.0.0.1/32
          Description: Allow self access
          IpProtocol: tcp
          FromPort: 5432
          ToPort: 5432

  DBProxy:
    Type: AWS::RDS::DBProxy
    Properties:
      DBProxyName: !Ref DBProxyName
      EngineFamily: POSTGRESQL
      RoleArn: !GetAtt ProxyRole.Arn
      Auth:
        - AuthScheme: SECRETS
          IAMAuth: DISABLED
          SecretArn: !Ref AuthSecretArn
      VpcSubnetIds: !Ref VpcSubnetIds
      RequireTLS: true
      IdleClientTimeout: 1800
      DebugLogging: true
      VpcSecurityGroupIds:
        - !Ref SecurityGroup

  ProxyTargetGroup:
    Type: AWS::RDS::DBProxyTargetGroup
    Properties:
      DBProxyName: !Ref DBProxy
      TargetGroupName: default
      DBClusterIdentifiers:
        - !Ref DBClusterIdentifier

  ProxyRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: rds.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: DBProxyPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - secretsmanager:GetSecretValue
                  - kms:Decrypt
                Resource: !Sub 'arn:aws:secretsmanager:${AWS::Region}:${AWS::AccountId}:secret:*'

Outputs:
  DBProxyEndpoint:
    Description: "The endpoint of the RDS Proxy"
    Value: !GetAtt DBProxy.Endpoint
